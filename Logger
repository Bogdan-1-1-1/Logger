package usefulClasses;

import java.util.ArrayList;
import java.util.Arrays;

public class Logger {

    private static final String ANSI_RESET = "\u001B[0m";
    private static final String ANSI_RED = "\u001B[31m";
    private static final String ANSI_GREEN = "\u001B[32m";
    private static final String ANSI_PURPLE = "\u001B[35m";
    private static final String ANSI_WHITE = "\u001B[37m";

    private static Logger instance;             //реализуем паттерн Singleton
    public static Logger getInstance() {        //
        if(instance == null) {                  //
            instance = new Logger();            //
        }                                       //
        return instance;                        //
    }
    private Logger() { }

    private String[] arr = {"ALL","TAG", "INFO", "DEBUG", "ERROR", "FATAL"};
    private ArrayList<String> logLevels = new ArrayList<>(Arrays.asList(arr));

    private void log(String tag, String message) {
        String logLevel = "ALL";
        if(logLevels.contains(tag)) {
            logLevel = tag;
        }
        System.out.println(logLevel +": ["+ message + "]");
    }

    public void error(String message) {
        log("ERROR", ANSI_RED + message + ANSI_RESET);
    }
    public void info(String message) {
        log("INFO", message);
        log("ERROR", ANSI_RED + message + ANSI_RESET);
    }
    public void debug(String message) {
        log("INFO", message);
        log("DEBUG", ANSI_GREEN + message + ANSI_RESET);
        log("ERROR", ANSI_RED + message + ANSI_RESET);
    }
    public void all(String message) {
        log("TAG", ANSI_WHITE + message + ANSI_RESET);
        log("INFO", message);
        log("DEBUG", ANSI_GREEN + message + ANSI_RESET);
        log("ERROR",ANSI_RED + message + ANSI_RESET);
        log("FATAL", ANSI_PURPLE + message + ANSI_RESET);
    }
    public void fatal(String message) {
        log("ERROR",ANSI_RED + message + ANSI_RESET);
        log("FATAL", ANSI_PURPLE + message + ANSI_RESET);
    }
    public void tag(String message) {
        log("TAG", ANSI_WHITE + message + ANSI_RESET);
    }
}
